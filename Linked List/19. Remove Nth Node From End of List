Given a linked list, remove the nth node from the end of list and return its head.
Note:
Given n will always be valid.
Try to do this in one pass.


题型：Linked List，Two Pointers

我的解法：
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        vector<ListNode*> storeNode;
        ListNode* pos=head;
        while(pos!=NULL){
            storeNode.push_back(pos);
            pos=pos->next;
        }
        int m=storeNode.size();
        if(m==n) head=head->next;
        else storeNode[m-n-1]->next=storeNode[m-n]->next;
        return head;
    }
};

class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(n==0) return head;
        ListNode *pos1=head,**pos2=&head;
        for(int i=1;i<n;i++){
            pos1=pos1->next;
        }
        while(pos1->next!=NULL){
            pos1=pos1->next;
            pos2=&((*pos2)->next);
        }
        *pos2=(*pos2)->next;
        return head;
    }
};
