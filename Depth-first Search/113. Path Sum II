Related Topics:Tree, Depth-first Search


QUestion:
Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return
[
   [5,4,11,2],
   [5,8,4,5]
]



Answer:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> res;
        depthSearch(res,root,sum);
        return res;
    }
    void depthSearch(vector<vector<int>> &res,TreeNode* root,int sum){
        if(root==NULL) return;
        sum-=root->val;
        cur.push_back(root->val);
        if(sum==0&&root->left==NULL&&root->right==NULL){
            res.push_back(vector<int>(cur));
            
        }
        else{
            depthSearch(res,root->left,sum);
            depthSearch(res,root->right,sum);
        }
        cur.pop_back();
        
    }
    vector<int> cur;
};
