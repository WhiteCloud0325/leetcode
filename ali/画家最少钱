有个穷困的艺术家。他画了一幅超现实主义的作品《方块手拉手》。现在他已经把图画中手拉手的一排大小不一的方块都画出来了。现在要考虑上颜色了。可惜他手中的钱并不多了。但是他是个有追求的人，他希望这幅画中每两个相邻的方块的颜色是不一样的。你能帮他计算一下把这幅画上色后，最少需要花多少钱么。
输入 N个方块，K个颜色
接下来每列是各个方块染成不同颜色的价钱

输出 最少花的钱
 
 
 例：
4
 2 3 2
 9 1 4
 7 8 1
动态规划解法
int minCost(vector<vector<int>> &costs){
	int N = costs.size();
	int K = costs.size();
	vector<vector<int>> dp(N, vector<int>(K, INT_MAX));
	for (int j = 0; j < K; j++){
		dp[0][j] = costs[0][j];
	}
	for (int i = 1; i < N; i++){
		for (int j = 0; j < K; j++){
			for (int m = 0; m < K; m++){
				if (m == j) continue;
				dp[i][j] = min(dp[i - 1][m] + costs[i][j],dp[i][j]);
			}
		}
	}
	int res = INT_MAX;
	for (int j = 0; j < K; j++){
		res = min(res, dp[N - 1][K]);
	}
	return res;
}
