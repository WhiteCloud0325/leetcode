Difficulty: Medium
Related Topics: Backtracking

Question:
Given a collection of distinct numbers, return all possible permutations.

For example,
[1,2,3] have the following permutations:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]


Answer:Backtracking
class Solution {
public:
    vector<bool> isUsed;
    vector<int> cur;
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> res;
        cur=vector<int>();
        int n=nums.size();
        isUsed=vector<bool>(n,false);
        backTrack(nums,0,res);
        return res;
    }
    void backTrack(vector<int>& nums,int k,vector<vector<int>>&res){
        int n=nums.size();
        if(k==n){
            res.push_back(cur);
            return;
        }
        for(int i=0;i<n;i++){
            if(isUsed[i]) continue;
            isUsed[i]=true;
            cur.push_back(nums[i]);
            backTrack(nums,k+1,res);
            cur.pop_back();
            isUsed[i]=false;
        }
        return;  
    }
};
