
Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words. You may assume the dictionary does not contain duplicate words.

For example, given
s = "leetcode",
dict = ["leet", "code"].

Return true because "leetcode" can be segmented as "leet code".

UPDATE (2017/1/4):
The wordDict parameter had been changed to a list of strings (instead of a set of strings). Please reload the code definition to get the latest changes.

class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        int len=s.length();
        if(len==0) return false;
        vector<bool> dp(len+1,false);
        dp[0]=true;
        for(int i=1;i<=len;i++){
            for(int j=i-1;j>=0;j--){
                if(dp[j]){
                    string temp = s.substr(j,i-j);
                    if(wordFind(temp,wordDict)){
                        dp[i]=true;
                        break;
                    }
                }
            } 
        }
        return dp[len];
    }
    bool wordFind(string s, vector<string>& wordDict){
        for(int i=0;i<wordDict.size();i++)
            if(s==wordDict[i]) return true;
        return false;
    }

};
