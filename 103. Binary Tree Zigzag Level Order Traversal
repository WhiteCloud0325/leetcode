Related Topics:Stack, Tree, Breadth-first Search
Difficulty: Medium

Question:
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

Answer:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(!root) return res;
        queue<TreeNode*> myQueue;
        bool isReversed = false;
        myQueue.push(root);
        int curNum=0,lastNum=1;
        while(!myQueue.empty()){
            vector<int> curLevel;
            for(int i=0;i<lastNum;i++){
                TreeNode *temp=myQueue.front();
                myQueue.pop();
                if(temp->left){
                    myQueue.push(temp->left);
                    curNum++;
                }
                if(temp->right){
                    myQueue.push(temp->right);
                    curNum++;
                }
                if(isReversed) curLevel.insert(curLevel.begin(),temp->val);
                else curLevel.push_back(temp->val);
            }
            lastNum=curNum;
            curNum=0;
            isReversed=!isReversed;
            res.push_back(curLevel);
        }
        return res;
    }
};
