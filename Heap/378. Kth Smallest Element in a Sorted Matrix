Given a n x n matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.

Note that it is the kth smallest element in the sorted order, not the kth distinct element.

Example:

matrix = [
   [ 1,  5,  9],
   [10, 11, 13],
   [12, 13, 15]
],
k = 8,

return 13.


class Solution {
public:
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int row=matrix.size(),col=matrix[0].size();
        struct comp{
            bool operator()(int a,int b){
                if(a>b) return true;
                else return false;
            }
        };
        priority_queue<int,vector<int>,comp> pq;
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++)
                pq.push(matrix[i][j]);
        }
        int i=1;
        while(i++<k)
            pq.pop();
        return pq.top();
    }
};
