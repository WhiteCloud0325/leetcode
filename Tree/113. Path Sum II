Related Topics: Tree, Depth-first Search
Difficulty: Medium

Question:
Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return
[
   [5,4,11,2],
   [5,8,4,5]
]

Answer:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> res;
        vector<int> cur;
        findPath(root,res,cur,sum);
        return res;
        
    }
    void findPath(TreeNode *root,vector<vector<int>> &res,vector<int> cur,int sum){
        if(root==NULL) return;
        cur.push_back(root->val);
        sum-=root->val;
        if(sum==0 &&root->left==NULL &&root->right==NULL) res.push_back(cur);
        findPath(root->left,res,cur,sum);
        findPath(root->right,res,cur,sum);
    }
};
