Related Topics: Tree, Stack


Question:
Given a binary tree, return the preorder traversal of its nodes' values.

For example:
Given binary tree [1,null,2,3],
   1
    \
     2
    /
   3
return [1,2,3].


Answer:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> res;
        preOrder(root,res);
        return res;
        
    }
    void preOrder(TreeNode *root,vector<int> &res){
        if(root==NULL) return;
        res.push_back(root->val);
        preOrder(root->left,res);
        preOrder(root->right,res);
    }
};


Answer2:stack
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> res;
        TreeNode* cur=root;
        stack<TreeNode*> myStack;
        while(!myStack.empty()||cur){
            if(cur){
                myStack.push(cur);
                res.push_back(cur->val);
                cur=cur->left;
            }
            else{
                cur=myStack.top();
                cur=cur->right;
                myStack.pop();
            }
        }
        return res;
    }
};
