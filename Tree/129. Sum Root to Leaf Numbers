Related Topics: Tree, Depth-first Search
Difficulty: Medium

Question:
Given a binary tree containing digits from 0-9 only, each root-to-leaf path could represent a number.

An example is the root-to-leaf path 1->2->3 which represents the number 123.

Find the total sum of all root-to-leaf numbers.

For example,

    1
   / \
  2   3
The root-to-leaf path 1->2 represents the number 12.
The root-to-leaf path 1->3 represents the number 13.

Return the sum = 12 + 13 = 25.

Answer:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode* root) {
        int res=0;
        int num=0;
        if(root==NULL) return res;
        findNum(root,num,res);
        return res;
        
    }
    void findNum(TreeNode *root,int num,int &res){
        num=10*num+root->val;
        if(root->left==NULL&& root->right==NULL){
            res+=num;
            return;
        }
        if(root->left) findNum(root->left,num,res);
        if(root->right) findNum(root->right,num,res);
    }
};
