Difficulty: Medium
Related Topics: Tree, Breadth-first Search

Question:
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]


Answer: BFS
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        queue<TreeNode*> myQueue;
        if(root==NULL) return res;
        myQueue.push(root);
        int curNum=0,lastNum=1;
        while(!myQueue.empty()){
            vector<int> curLevel;
            curNum=0;
            for(int i=0;i<lastNum;i++){
                TreeNode *pNode=myQueue.front();
                myQueue.pop();
                curLevel.push_back(pNode->val);
                if(pNode->left){
                    curNum++;
                    myQueue.push(pNode->left);
                }
                if(pNode->right){
                    curNum++;
                    myQueue.push(pNode->right);
                }
            }
            lastNum=curNum;
            res.push_back(curLevel);
        }
        return res;
     }
};
