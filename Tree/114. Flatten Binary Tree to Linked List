Related Topics:Tree, Depth-first Search
Difficulty: Medium

Question:
Given a binary tree, flatten it to a linked list in-place.

For example,
Given

         1
        / \
       2   5
      / \   \
     3   4   6
The flattened tree should look like:
   1
    \
     2
      \
       3
        \
         4
          \
           5
            \
             6
             
Answer:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        stack<TreeNode*> st;
        TreeNode *cur=root;
        TreeNode *last=NULL;
        while(!st.empty()||cur){
            if(cur){
                if(cur->right) st.push(cur->right);
                cur->right=cur->left;
                cur->left=NULL;
                last=cur;
                cur=cur->right;
            }
            else{
                cur=st.top();
                last->right=cur;
                st.pop();
            }
        }
    }
};
