Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
利用异或运算法则：
异或运算法则
1. a ^ b = b ^ a 
2. a ^ b ^ c = a ^ (b ^ c) = (a ^ b) ^ c; 
3. d = a ^ b ^ c 可以推出 a = d ^ b ^ c. 
4. a ^ b ^ a = b.
5. 0^a=a,a^a=0

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int res=0;
        for(int i=0;i<nums.size();i++) res^=nums[i];
        return  res;
    }
};
