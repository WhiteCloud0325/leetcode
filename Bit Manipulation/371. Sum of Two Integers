Calculate the sum of two integers a and b, but you are not allowed to use the operator + and -.

Example:
Given a = 1 and b = 2, return 3.

Credits:
Special thanks to @fujiaozhu for adding this problem and creating all test cases.

注意负数右移高位补1
class Solution {
public:
    int getSum(int a, int b) {
        int sum=0;
        int carry=0;
        int i=0;
        while(i!=32){
            sum|=((a&1)^(b&1)^(carry&1))<<i;
            carry=((a&1)&(b&1))|((a&1)&(carry&1))|((b&1)&(carry&1));
            i++;
            a>>=1;
            b>>=1;
        }
        
        return sum;
    }
};



class Solution {
public:
    int getSum(int a, int b) {
        int sum = a;
        
        while (b != 0)
        {
            sum = a ^ b;//calculate sum of a and b without thinking the carry 
            b = (a & b) << 1;//calculate the carry
            a = sum;//add sum(without carry) and carry
        }
        
        return sum;
    }
};
