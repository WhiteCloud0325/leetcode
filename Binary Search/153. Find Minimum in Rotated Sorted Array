Difficulty: Medium
Related Topics: Array, Bianry Search
Question:
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.

Answer:
class Solution {
public:
    int findMin(vector<int>& nums) {
        if(nums.size()==1) return nums[0];
        int res=nums[0];
        int left=0,right=nums.size()-1,mid;
        while(left<=right){
            int mid=left+(right-left)/2;
            if(nums[0]<=nums[mid]){
                left=mid+1;
            }
            else{
                res=min(nums[mid],res);
                right=mid-1;
            }
        }
        
        return res;
    }
};

Answer2:
class Solution {
public:
    int findMin(vector<int>& nums) {
        int left=0,right=nums.size()-1;
        while(left<right){
            int mid=(left+right)/2;
            if(nums[mid]<=nums[right])
                right=mid;
            else
                left=mid+1;
        }
        return nums[left];
    }
};
